#!/usr/bin/env bash
set -o pipefail
set -e

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$CURRENT_DIR/byte-com"

# When press ctrl+c, it will call `trap_ctrlc`.
trap "trap_ctrlc" 2

debug=true
log=true
target="$1"
inputs="$(ls *.in | sort -g)"
if [[ "$2" == "0" ]]; then debug=false; fi
if [[ "$3" == "0" ]]; then log=false; fi

test_cnt="$(ls *.in | wc -l)"
for i in $(seq "$test_cnt" 100); do
  rm -f "$i.out"
  rm -f "$i.res"
done

total_cnt=0
correct_cnt=0
for i in $inputs; do
  # Print input samples
  print_color '^' "XY ${i%.in}"
  # full_line '-'
  if [[ $debug == true || $log == true ]]; then
    print_stdout "$i" "false"
  fi

  # run: .inp --> .out
  # dif: .out --> .rel
  out="${i%.in}".res
  rel="${i%.in}".out
  if [[ $debug == true ]]; then
    # Kill(9) after TIME_LIMITS seconds past.
    cmd="$timeout -s9 $TIME_LIMITS ./$target < $i >$out 2>std_err"
  else
    cmd="$timeout -s9 $TIME_LIMITS time ./$target < $i >$out 2>std_err"
  fi

  if ! { bash -c "$cmd"; }; then
    error_split '-' "run error"
    print_stdout std_err
    rm -rf std_err
    full_error_line '-'
    error "Run Error, Might exceed the ($TIME_LIMITS)s limit or other issues."
    exit 1
  fi

  if [[ $debug == true ]]; then
    print_split '-' "debug"
    print_stdout std_err
  fi

  if [[ $debug == true || $log == true ]]; then
    print_split '-' "output"
    cat "$out"
  fi

  if [[ $debug == false ]]; then
    print_split '-' "time"
    print_stdout std_err
    rm -rf std_err
  fi

  total_cnt=$((total_cnt + 1))
  if [[ -e "$rel" ]]; then
    if diff -y "$out" "$rel" >/dev/null 2>&1; then
      correct_cnt=$((correct_cnt + 1))
      pass_right "PASSED"
    else
      error_right "Failed"
      if [[ $log == true ]]; then
        error_split '-' "compare"
        width=$((WIDTH / 2 / 8 + 2))
        byte-diff "$out" "$rel" "$WIDTH" || true
      fi
    fi
  else
    correct_cnt=$((correct_cnt + 1))
    error_right "Custom"
  fi
  if [[ $debug != true ]]; then
    echo -e "\n"
  fi
done

print_split '=' "done"

if [[ $debug == true ]]; then
  if [[ $total_cnt -gt 0 && $correct_cnt -eq $total_cnt ]]; then
    pass "ALL TESTS PASSED."
  else
    error "SOME TESTS FAILED."
  fi
fi

# Post work to clean up source file for submiting.
if byte-post "$target"; then
  pbcopy < "$target.cl" && pbpaste 2>&1 >/dev/null
fi
